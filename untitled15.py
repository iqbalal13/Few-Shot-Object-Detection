# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l14M4EWyaC1iGgYzb1w8ivu3p_n19MKo
"""

!pip install -q transformers torch

import torch
from transformers import DetrForObjectDetection, DetrFeatureExtractor
from PIL import Image
import requests

# 1. Muat (load) model dan feature extractor yang sudah dilatih
# Menggunakan versi pre-trained yang sudah dilatih di COCO 2017 dataset
feature_extractor = DetrFeatureExtractor.from_pretrained("facebook/detr-resnet-50")
model = DetrForObjectDetection.from_pretrained("facebook/detr-resnet-50")

# Pastikan model berjalan dalam mode evaluasi
model.eval()

# 2. Ambil contoh gambar dari internet
url = "http://images.cocodataset.org/val2017/000000039769.jpg"
image = Image.open(requests.get(url, stream=True).raw)

# 3. Proses gambar untuk disiapkan sebagai input model
# Feature extractor akan mengubah gambar menjadi tensor yang sesuai
inputs = feature_extractor(images=image, return_tensors="pt")

# 4. Lakukan inferensi (forward pass)
with torch.no_grad():
    outputs = model(**inputs)

# 5. Pasca-proses output untuk mendapatkan deteksi objek
# Dapatkan probabilitas (scores) dan kotak pembatas (bounding boxes)
probas = outputs.logits.softmax(-1)[0, :, :-1]
keep = probas.argmax(-1) != model.config.num_labels

# Filter hasil dengan probabilitas di atas threshold tertentu (misal 0.9)
scores = probas[keep].max(-1)[0]
bboxes = outputs.pred_boxes[0, keep]

# Ubah bounding boxes dari format relatif ke format absolut (x, y, w, h)
bboxes = bboxes.cpu() * torch.tensor(image.size).flip(0).repeat(2)

print("Deteksi berhasil!")
for score, box in zip(scores, bboxes):
    xmin, ymin, xmax, ymax = box.tolist()
    print(f"Probabilitas: {score.item():.2f} | Bounding Box: [{xmin:.2f}, {ymin:.2f}, {xmax:.2f}, {ymax:.2f}]")

# Catatan: Untuk mendapatkan label kelas, Anda perlu memetakan indeks probabilitas ke nama kelas dari dataset COCO.